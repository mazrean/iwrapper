// Code generated by iwrapper; DO NOT EDIT.
package example

import "net/http"

func ResponseWriterWrapper(v http.ResponseWriter, wrapper func(http.ResponseWriter) ResponseWriter) http.ResponseWriter {
	wrapped := wrapper(v)
	var i uint64
	const (
		i0 = 1 << iota
		i1
		i2
	)
	if _, ok := v.(http.Hijacker); ok {
		i |= i0
	}
	if _, ok := v.(http.CloseNotifier); ok {
		i |= i1
	}
	if _, ok := v.(http.Flusher); ok {
		i |= i2
	}
	switch i {
	case 0b0:
		return struct {
			http.ResponseWriter
		}{wrapped}
	case 0b1:
		return struct {
			http.ResponseWriter
			http.Hijacker
		}{wrapped, wrapped}
	case 0b10:
		return struct {
			http.ResponseWriter
			http.CloseNotifier
		}{wrapped, wrapped}
	case 0b11:
		return struct {
			http.ResponseWriter
			http.Hijacker
			http.CloseNotifier
		}{wrapped, wrapped, wrapped}
	case 0b100:
		return struct {
			http.ResponseWriter
			http.Flusher
		}{wrapped, wrapped}
	case 0b101:
		return struct {
			http.ResponseWriter
			http.Hijacker
			http.Flusher
		}{wrapped, wrapped, wrapped}
	case 0b110:
		return struct {
			http.ResponseWriter
			http.CloseNotifier
			http.Flusher
		}{wrapped, wrapped, wrapped}
	case 0b111:
		return struct {
			http.ResponseWriter
			http.Hijacker
			http.CloseNotifier
			http.Flusher
		}{wrapped, wrapped, wrapped, wrapped}
	}
	return v
}
